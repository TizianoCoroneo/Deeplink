{"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/deeplink\/getting-started-with-deeplinking","title":"Getting started with Deeplinking","type":"article"},{"children":[{"title":"Create a Deeplink template","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/init(stringliteral:)","title":"init(stringLiteral: Deeplink<Value>.StringLiteralType)","type":"init"},{"path":"\/documentation\/deeplink\/deeplink\/init(stringinterpolation:)","title":"init(stringInterpolation: DeeplinkInterpolation<Value>)","type":"init"},{"title":"Parse a URL","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/parse(_:)","title":"func parse(URL) throws","type":"method"},{"path":"\/documentation\/deeplink\/deeplink\/parse(_:into:)","title":"func parse(URL, into: inout Value) throws","type":"method"},{"title":"DeeplinkBuilder closures","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/callasfunction(_:)-9eb8h","title":"func callAsFunction((URL) throws -> Bool) -> AnyDeeplink","type":"method"},{"path":"\/documentation\/deeplink\/deeplink\/callasfunction(_:)-34acp","title":"func callAsFunction((URL, Value) throws -> Bool) -> AnyDeeplink","type":"method"},{"path":"\/documentation\/deeplink\/deeplink\/callasfunction(assigningto:_:)","title":"func callAsFunction(assigningTo: Value, (URL, Value) throws -> Bool) -> AnyDeeplink","type":"method"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/interpolated(_:)","title":"case interpolated(DeeplinkInterpolation<Value>)","type":"case"},{"path":"\/documentation\/deeplink\/deeplink\/literal(_:)","title":"case literal(String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/encode(_:)","title":"func encode(Value) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/stringliteraltype","title":"Deeplink.StringLiteralType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/catchall","title":"static var catchAll: Deeplink<Void>","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/deeplink\/deeplink\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/deeplink\/deeplink\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/deeplink\/deeplink\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/init(stringinterpolation:)","title":"init(stringInterpolation: DeeplinkInterpolation<Value>)","type":"init"}],"path":"\/documentation\/deeplink\/deeplink\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/init(stringliteral:)","title":"init(stringLiteral: Deeplink<Value>.StringLiteralType)","type":"init"}],"path":"\/documentation\/deeplink\/deeplink\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplink\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/deeplink\/deeplink\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/deeplink\/deeplink","title":"Deeplink","type":"enum"},{"children":[{"title":"Initialize a center","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplinkscenter\/init()","title":"convenience init()","type":"init"},{"path":"\/documentation\/deeplink\/deeplinkscenter\/init(_:)","title":"convenience init(() -> [AnyDeeplink])","type":"init"},{"title":"Registering deeplinks","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplinkscenter\/register(deeplink:assigningto:ifmatching:)","title":"func register<Value>(deeplink: Deeplink<Value>, assigningTo: Value, ifMatching: (URL, Value) throws -> Bool) -> DeeplinksCenter","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkscenter\/register(deeplink:ifmatching:)","title":"func register(deeplink: Deeplink<Void>, ifMatching: (URL) throws -> Bool) -> DeeplinksCenter","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkscenter\/register(deeplinks:assigningto:ifmatching:)","title":"func register<Value>(deeplinks: [Deeplink<Value>], assigningTo: Value, ifMatching: (URL, Value) throws -> Bool) -> DeeplinksCenter","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkscenter\/register(deeplinks:ifmatching:)","title":"func register(deeplinks: [Deeplink<Void>], ifMatching: (URL) throws -> Bool) -> DeeplinksCenter","type":"method"},{"title":"Parsing URLs","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplinkscenter\/parse(url:)","title":"func parse(url: URL) throws","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplinkscenter\/testsampledeeplink(_:)","title":"func testSampleDeeplink<Value>(SampleDeeplink<Value>) throws","type":"method"}],"path":"\/documentation\/deeplink\/deeplinkscenter","title":"DeeplinksCenter","type":"class"},{"title":"Tests","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/deeplink\/sampledeeplink\/init(deeplinktemplate:urltoparse:assigningtoinstance:expectation:assertions:)","title":"init(deeplinkTemplate: Deeplink<Value>, urlToParse: URL, assigningToInstance: Value, expectation: () -> Void, assertions: (Value) -> Void)","type":"init"},{"path":"\/documentation\/deeplink\/sampledeeplink\/init(deeplinktemplate:urltoparse:expectation:)","title":"init(deeplinkTemplate: Deeplink<Value>, urlToParse: URL, expectation: () -> Void)","type":"init"}],"path":"\/documentation\/deeplink\/sampledeeplink","title":"SampleDeeplink","type":"struct"},{"title":"Utility","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/deeplink\/defaultinitializable\/init()","title":"init()","type":"init"}],"path":"\/documentation\/deeplink\/defaultinitializable","title":"DefaultInitializable","type":"protocol"},{"title":"Implementation details","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/deeplink\/anydeeplink\/description","title":"let description: String","type":"property"}],"path":"\/documentation\/deeplink\/anydeeplink","title":"AnyDeeplink","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplinkinterpolation\/init(literalcapacity:interpolationcount:)","title":"init(literalCapacity: Int, interpolationCount: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplinkinterpolation\/appendinterpolation(_:)","title":"func appendInterpolation(WritableKeyPath<Value, String?>) throws","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkinterpolation\/appendinterpolation(_:separator:)","title":"func appendInterpolation(WritableKeyPath<Value, [String]?>, separator: Character) throws","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkinterpolation\/appendliteral(_:)","title":"func appendLiteral(String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplinkinterpolation\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/deeplink\/deeplinkinterpolation\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplinkinterpolation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/deeplink\/deeplinkinterpolation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/deeplink\/deeplinkinterpolation","title":"DeeplinkInterpolation","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplinkbuilder\/component","title":"DeeplinkBuilder.Component","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/deeplink\/deeplinkbuilder\/buildarray(_:)","title":"static func buildArray([DeeplinkBuilder.Component]) -> DeeplinkBuilder.Component","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkbuilder\/buildblock(_:)","title":"static func buildBlock(DeeplinkBuilder.Component...) -> DeeplinkBuilder.Component","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkbuilder\/buildeither(first:)","title":"static func buildEither(first: DeeplinkBuilder.Component) -> DeeplinkBuilder.Component","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkbuilder\/buildeither(second:)","title":"static func buildEither(second: DeeplinkBuilder.Component) -> DeeplinkBuilder.Component","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkbuilder\/buildexpression(_:)-6kuwv","title":"static func buildExpression(AnyDeeplink?) -> DeeplinkBuilder.Component","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkbuilder\/buildexpression(_:)-8a26a","title":"static func buildExpression(AnyDeeplink) -> DeeplinkBuilder.Component","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkbuilder\/buildlimitedavailability(_:)","title":"static func buildLimitedAvailability(DeeplinkBuilder.Component) -> DeeplinkBuilder.Component","type":"method"},{"path":"\/documentation\/deeplink\/deeplinkbuilder\/buildoptional(_:)","title":"static func buildOptional(DeeplinkBuilder.Component?) -> DeeplinkBuilder.Component","type":"method"}],"path":"\/documentation\/deeplink\/deeplinkbuilder","title":"DeeplinkBuilder","type":"struct"},{"title":"Tutorial","type":"groupMarker"},{"children":[{"title":"Using the library","type":"groupMarker"},{"path":"\/tutorials\/deeplink\/adding-a-deeplink","title":"Adding Deeplinks","type":"project"},{"path":"\/tutorials\/deeplink\/using-a-resultbuilder","title":"Registering Deeplinks with a ResultBuilder","type":"project"},{"path":"\/tutorials\/deeplink\/advanced-usage","title":"Advanced Usage","type":"project"}],"path":"\/tutorials\/table-of-contents","title":"🎣 All about Deeplinks","type":"overview"}],"path":"\/documentation\/deeplink","title":"Deeplink","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}