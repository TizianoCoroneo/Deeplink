{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"url"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a "},{"type":"codeVoice","code":"DeeplinkError"},{"type":"text","text":" if we cannot parse relative path, query items or fragments from the URL, or if there is no valid match."}]}],"type":"aside","name":"Throws"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/deeplink\/deeplink\/parse(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/parse(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Attempt to parse a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" by using the current deeplink. This is a utility for literal deeplinks that do not contain any argument, as they don’t need an instance to assign values to."}],"kind":"symbol","metadata":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"parse(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"symbolKind":"method","externalID":"s:8DeeplinkAAOAAytRszlE5parseyy10Foundation3URLVKF","extendedModule":"Deeplink","modules":[{"name":"Deeplink"}]},"hierarchy":{"paths":[["doc:\/\/Deeplink\/documentation\/Deeplink","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink"]]},"seeAlsoSections":[{"title":"Parse a URL","identifiers":["doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/parse(_:into:)"],"generated":true}],"references":{"doc://Deeplink/documentation/Deeplink/Deeplink/parse(_:into:)":{"role":"symbol","title":"parse(_:into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Attempt to parse a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" by using the current deeplink. In case of success, the argument found by the pattern matching will be assigned to their corresponding keypath to the "},{"type":"codeVoice","code":"instance"},{"type":"text","text":" object."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/parse(_:into:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/parse(_:into:)"},"doc://Deeplink/documentation/Deeplink/Deeplink":{"role":"symbol","title":"Deeplink","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deeplink"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" that represents a deeplink template."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Deeplink"}],"url":"\/documentation\/deeplink\/deeplink"},"doc://Deeplink/documentation/Deeplink/Deeplink/parse(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Attempt to parse a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" by using the current deeplink. This is a utility for literal deeplinks that do not contain any argument, as they don’t need an instance to assign values to."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/parse(_:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/parse(_:)"},"doc://Deeplink/documentation/Deeplink":{"role":"collection","title":"Deeplink","abstract":[{"type":"text","text":"A microlibrary to parse deeplinks and their arguments."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink","kind":"symbol","type":"topic","url":"\/documentation\/deeplink"}}}