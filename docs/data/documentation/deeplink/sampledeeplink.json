{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SampleDeeplink"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you register deeplink templates in your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter"},{"type":"text","text":" you need to check that no other template matches your new deeplink before it. This is because the registered deeplinks are evaluated in order of registration, and the first one that matches stops the process. Checking manually is very difficult once you have a substantial number of deeplink registrations."},{"type":"text","text":" "},{"type":"text","text":"An example is the following:"}]},{"type":"codeListing","syntax":"swift","code":["let templateA = \"\/test\/a\" as Deeplink<Void>","let templateB = \"\/test\/a\/b\" as Deeplink<Void>"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If these two links are registered in the order "},{"type":"codeVoice","code":"A, B"},{"type":"text","text":" in your "},{"type":"codeVoice","code":"DeeplinkCenter"},{"type":"text","text":", then the pattern for "},{"type":"codeVoice","code":"A"},{"type":"text","text":" will always match links that more closely resemble "},{"type":"codeVoice","code":"templateB"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink"},{"type":"text","text":" lets you write unit tests to verify that no one of your previous deeplinks are overridden by any new deeplink youâ€™re adding. You can write a unit test to verify a deeplink like this:"}]},{"type":"codeListing","syntax":"swift","code":["func testMyDeeplink() throws {","    let sample = SampleDeeplink(","        deeplinkTemplate: \"\/my-deeplink\/\\(\\.id)\/hello\" as Deeplink<MyData>,","        urlToParse: \"https:\/\/apple.com\/my-deeplink\/123\/hello\",","        assigningToInstance: .init(),","        expectation: { self.expectation(description: \"Should call completion\").fulfill() },","        assertions: {","            XCTAssertEqual($0.id, \"123\")","        }","    )","","    try deeplinkCenter.testSampleDeeplink(sample)","","    waitForExpectations(timeout: 0.1, handler: nil)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This test will try to pass the provided "},{"type":"codeVoice","code":"urlToParse"},{"type":"text","text":" to your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter"},{"type":"text","text":" instance, it will expect the registration corresponding to your template to be successfully executed, and it provides a closure where you can assert that the parameters were parsed correctly."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is best to always write one unit test using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink"},{"type":"text","text":" for each of your registration."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/deeplink\/sampledeeplink"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"You can use a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink"},{"type":"text","text":" to create unit tests that verify that the order of registrations of deeplinks in your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter"},{"type":"text","text":" is sound, and no template stops another from being detected."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SampleDeeplink"}],"title":"SampleDeeplink","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:8Deeplink06SampleA0V","modules":[{"name":"Deeplink"}],"navigatorTitle":[{"kind":"identifier","text":"SampleDeeplink"}]},"hierarchy":{"paths":[["doc:\/\/Deeplink\/documentation\/Deeplink"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink\/init(deeplinkTemplate:urlToParse:assigningToInstance:expectation:assertions:)","doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink\/init(deeplinkTemplate:urlToParse:expectation:)"]}],"references":{"doc://Deeplink/documentation/Deeplink/DeeplinksCenter":{"role":"symbol","title":"DeeplinksCenter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeeplinksCenter"}],"abstract":[{"type":"text","text":"Register deeplinks and parse URLs."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeeplinksCenter"}],"url":"\/documentation\/deeplink\/deeplinkscenter"},"doc://Deeplink/documentation/Deeplink/DeeplinksCenter/testSampleDeeplink(_:)":{"role":"symbol","title":"testSampleDeeplink(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"testSampleDeeplink"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"SampleDeeplink","preciseIdentifier":"s:8Deeplink06SampleA0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Pass a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink"},{"type":"text","text":" instance to this function to perform a deeplink registration unit test."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter\/testSampleDeeplink(_:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplinkscenter\/testsampledeeplink(_:)"},"doc://Deeplink/documentation/Deeplink":{"role":"collection","title":"Deeplink","abstract":[{"type":"text","text":"A microlibrary to parse deeplinks and their arguments."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink","kind":"symbol","type":"topic","url":"\/documentation\/deeplink"},"doc://Deeplink/documentation/Deeplink/SampleDeeplink/init(deeplinkTemplate:urlToParse:assigningToInstance:expectation:assertions:)":{"role":"symbol","title":"init(deeplinkTemplate:urlToParse:assigningToInstance:expectation:assertions:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"deeplinkTemplate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Deeplink","preciseIdentifier":"s:8DeeplinkAAO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"urlToParse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"assigningToInstance"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expectation"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"externalParam","text":"assertions"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink"},{"type":"text","text":" to be tested within your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter"},{"type":"text","text":" using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter\/testSampleDeeplink(_:)"},{"type":"text","text":" method."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink\/init(deeplinkTemplate:urlToParse:assigningToInstance:expectation:assertions:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/sampledeeplink\/init(deeplinktemplate:urltoparse:assigningtoinstance:expectation:assertions:)"},"doc://Deeplink/documentation/Deeplink/SampleDeeplink":{"role":"symbol","title":"SampleDeeplink","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SampleDeeplink"}],"abstract":[{"type":"text","text":"You can use a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink"},{"type":"text","text":" to create unit tests that verify that the order of registrations of deeplinks in your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter"},{"type":"text","text":" is sound, and no template stops another from being detected."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SampleDeeplink"}],"url":"\/documentation\/deeplink\/sampledeeplink"},"doc://Deeplink/documentation/Deeplink/SampleDeeplink/init(deeplinkTemplate:urlToParse:expectation:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(deeplinkTemplate:urlToParse:expectation:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"deeplinkTemplate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Deeplink","preciseIdentifier":"s:8DeeplinkAAO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"urlToParse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expectation"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Create a new "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink"},{"type":"text","text":" to be tested within your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter"},{"type":"text","text":" using the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter\/testSampleDeeplink(_:)"},{"type":"text","text":" method."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink\/init(deeplinkTemplate:urlToParse:expectation:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/sampledeeplink\/init(deeplinktemplate:urltoparse:expectation:)"}}}