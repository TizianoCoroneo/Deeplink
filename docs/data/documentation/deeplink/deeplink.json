{"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Deeplink\/documentation\/Deeplink\/Getting-started-with-Deeplinking","doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deeplink"}],"title":"Deeplink","roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","externalID":"s:8DeeplinkAAO","modules":[{"name":"Deeplink"}],"navigatorTitle":[{"kind":"identifier","text":"Deeplink"}]},"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" that represents a deeplink template."}],"sections":[],"identifier":{"url":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/Deeplink\/s23CustomStringConvertibleP","doc:\/\/Deeplink\/SQ","doc:\/\/Deeplink\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/Deeplink\/s32ExpressibleByStringInterpolationP","doc:\/\/Deeplink\/s26ExpressibleByStringLiteralP","doc:\/\/Deeplink\/s33ExpressibleByUnicodeScalarLiteralP","doc:\/\/Deeplink\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/Deeplink\/documentation\/Deeplink"]]},"topicSections":[{"title":"Create a Deeplink template","abstract":[{"type":"text","text":"Don’t use these initializer directly, use String literals and String interpolation instead."}],"identifiers":["doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/init(stringLiteral:)","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/init(stringInterpolation:)"]},{"title":"Parse a URL","identifiers":["doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/parse(_:)","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/parse(_:into:)"]},{"title":"DeeplinkBuilder closures","identifiers":["doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/callAsFunction(_:)-9eb8h","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/callAsFunction(_:)-34acp","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/callAsFunction(assigningTo:_:)"]},{"title":"Enumeration Cases","identifiers":["doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/interpolated(_:)","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/literal(_:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/StringLiteralType"]},{"title":"Type Properties","identifiers":["doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/catchAll"]},{"title":"Default Implementations","identifiers":["doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/CustomStringConvertible-Implementations","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/Equatable-Implementations","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/ExpressibleByStringInterpolation-Implementations","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/ExpressibleByStringLiteral-Implementations","doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/ExpressibleByUnicodeScalarLiteral-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/deeplink\/deeplink"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deeplink"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can define one of these and use it to check if a URL matches the same pattern, and extract some information from it."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"ExampleURL"}]},{"type":"codeListing","syntax":"swift","code":["struct Product {","    var productId: String?","}","","let productDeeplink: Deeplink<Product> = try! \"\/product\/\\(\\.productId)\"","","var productInfo = Product()","productDeeplink.parse(url: someURL, into: &productInfo)","","print(productInfo.productId ?? \"nil\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Deeplink can be or a literal deeplink with no parameters or an interpolated deeplink, where there are one or more parameters each represented by a "},{"type":"codeVoice","code":"KeyPath"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let productDeeplink: Deeplink<Product> = try! \"\/product\/\\(\\.productId)\"","let accountDeeplink: Deeplink<Void> = \"\/account\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The string interpolation initializer "},{"type":"codeVoice","code":"throws"},{"type":"text","text":" because there are a couple cases that cannot be handled via Deeplink templates yet:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We cannot define a template with two consecutive parameters because we don’t know when the first parameter needs to end and where the second one starts."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We cannot define a template that uses the same keypath twice or more in the same template. No technical reason, I just thought that this would be result of a mistake in most cases, and I’d prefer to catch it early."}]}]}]},{"type":"codeListing","syntax":"swift","code":["let badDeeplink1: Deeplink<Product> = try! \"\/product\/\\(\\.productId)\\(\\.name)\"","let badDeeplink2: Deeplink<Product> = try! \"\/product\/\\(\\.productId)\/\\(\\.productId)\""]}]}],"references":{"doc://Deeplink/documentation/Deeplink/Deeplink/ExpressibleByStringLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByStringLiteral Implementations","abstract":[],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/ExpressibleByStringLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/deeplink\/deeplink\/expressiblebystringliteral-implementations"},"ExampleURL":{"alt":"Example of a URL that contains one parameter.","type":"image","identifier":"ExampleURL","variants":[{"url":"\/images\/ExampleURL.png","traits":["1x","light"]},{"url":"\/images\/ExampleURL@2x.png","traits":["2x","light"]},{"url":"\/images\/ExampleURL~dark.png","traits":["1x","dark"]},{"url":"\/images\/ExampleURL~dark@2x.png","traits":["2x","dark"]}]},"doc://Deeplink/documentation/Deeplink/Deeplink/parse(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Attempt to parse a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" by using the current deeplink. This is a utility for literal deeplinks that do not contain any argument, as they don’t need an instance to assign values to."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/parse(_:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/parse(_:)"},"doc://Deeplink/s33ExpressibleByUnicodeScalarLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByUnicodeScalarLiteral","identifier":"doc:\/\/Deeplink\/s33ExpressibleByUnicodeScalarLiteralP"},"doc://Deeplink/documentation/Deeplink/Deeplink/literal(_:)":{"role":"symbol","title":"Deeplink.literal(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"literal"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A “literal” deeplink is a simple string: you can have a deeplink with no arguments and still attempt pattern matching it with a URL."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/literal(_:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/literal(_:)"},"doc://Deeplink/documentation/Deeplink":{"role":"collection","title":"Deeplink","abstract":[{"type":"text","text":"A microlibrary to parse deeplinks and their arguments."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink","kind":"symbol","type":"topic","url":"\/documentation\/deeplink"},"doc://Deeplink/documentation/Deeplink/Deeplink/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","abstract":[],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/deeplink\/deeplink\/expressiblebyextendedgraphemeclusterliteral-implementations"},"doc://Deeplink/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/Deeplink\/s23CustomStringConvertibleP"},"doc://Deeplink/documentation/Deeplink/Deeplink/init(stringInterpolation:)":{"role":"symbol","title":"init(stringInterpolation:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"stringInterpolation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DeeplinkInterpolation","preciseIdentifier":"s:8Deeplink0A13InterpolationV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Initialize a deeplink template with a string interpolation pattern. This will attempt to pattern match the string components of the interpolation, while assigning the extra parts of the URL to the property specified by keypaths from the argument components."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/init(stringInterpolation:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/init(stringinterpolation:)"},"doc://Deeplink/documentation/Deeplink/Deeplink/catchAll":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"catchAll","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"catchAll"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Deeplink","preciseIdentifier":"s:8DeeplinkAAO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A placeholder deeplink to match any URL."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/catchAll","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/catchall"},"doc://Deeplink/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral","identifier":"doc:\/\/Deeplink\/s43ExpressibleByExtendedGraphemeClusterLiteralP"},"doc://Deeplink/documentation/Deeplink/Deeplink/interpolated(_:)":{"role":"symbol","title":"Deeplink.interpolated(_:)","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"interpolated"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"DeeplinkInterpolation","preciseIdentifier":"s:8Deeplink0A13InterpolationV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"An “interpolated” deeplink is a string that also contains string interpolation arguments."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/interpolated(_:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/interpolated(_:)"},"doc://Deeplink/documentation/Deeplink/Deeplink/ExpressibleByStringInterpolation-Implementations":{"role":"collectionGroup","title":"ExpressibleByStringInterpolation Implementations","abstract":[],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/ExpressibleByStringInterpolation-Implementations","kind":"article","type":"topic","url":"\/documentation\/deeplink\/deeplink\/expressiblebystringinterpolation-implementations"},"doc://Deeplink/s32ExpressibleByStringInterpolationP":{"type":"unresolvable","title":"Swift.ExpressibleByStringInterpolation","identifier":"doc:\/\/Deeplink\/s32ExpressibleByStringInterpolationP"},"doc://Deeplink/documentation/Deeplink/Deeplink/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/deeplink\/deeplink\/equatable-implementations"},"doc://Deeplink/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Deeplink\/SQ"},"doc://Deeplink/documentation/Deeplink/Deeplink/callAsFunction(_:)-9eb8h":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"()"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"callAsFunction(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyDeeplink","preciseIdentifier":"s:8Deeplink03AnyA0V"}],"abstract":[{"type":"text","text":"Embeds the action to take when matching this deeplink into the deeplink itself, producing a AnyDeeplink instance."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/callAsFunction(_:)-9eb8h","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/callasfunction(_:)-9eb8h"},"doc://Deeplink/documentation/Deeplink/Deeplink":{"role":"symbol","title":"Deeplink","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deeplink"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" that represents a deeplink template."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Deeplink"}],"url":"\/documentation\/deeplink\/deeplink"},"doc://Deeplink/documentation/Deeplink/Getting-started-with-Deeplinking":{"role":"article","title":"Getting started with Deeplinking","abstract":[{"type":"text","text":"From 0 to "},{"type":"codeVoice","code":"\/hero"},{"type":"text","text":"."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Getting-started-with-Deeplinking","kind":"article","type":"topic","url":"\/documentation\/deeplink\/getting-started-with-deeplinking"},"doc://Deeplink/documentation/Deeplink/Deeplink/StringLiteralType":{"role":"symbol","title":"Deeplink.StringLiteralType","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"StringLiteralType"}],"abstract":[],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/StringLiteralType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StringLiteralType"}],"url":"\/documentation\/deeplink\/deeplink\/stringliteraltype"},"doc://Deeplink/s26ExpressibleByStringLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByStringLiteral","identifier":"doc:\/\/Deeplink\/s26ExpressibleByStringLiteralP"},"doc://Deeplink/documentation/Deeplink/DeeplinksCenter":{"role":"symbol","title":"DeeplinksCenter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeeplinksCenter"}],"abstract":[{"type":"text","text":"Register deeplinks and parse URLs."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeeplinksCenter"}],"url":"\/documentation\/deeplink\/deeplinkscenter"},"doc://Deeplink/documentation/Deeplink/Deeplink/ExpressibleByUnicodeScalarLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByUnicodeScalarLiteral Implementations","abstract":[],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/ExpressibleByUnicodeScalarLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/deeplink\/deeplink\/expressiblebyunicodescalarliteral-implementations"},"doc://Deeplink/documentation/Deeplink/Deeplink/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/CustomStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/deeplink\/deeplink\/customstringconvertible-implementations"},"doc://Deeplink/documentation/Deeplink/Deeplink/init(stringLiteral:)":{"role":"symbol","title":"init(stringLiteral:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"stringLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Deeplink","preciseIdentifier":"s:8DeeplinkAAO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"StringLiteralType","preciseIdentifier":"s:8DeeplinkAAO17StringLiteralTypea"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initialize a deeplink template with a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" literal. This will simply attempt to pattern match this string with the "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" passed to the "},{"type":"codeVoice","code":"parse(_:into:)"},{"type":"text","text":" function."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/init(stringLiteral:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/init(stringliteral:)"},"doc://Deeplink/documentation/Deeplink/Deeplink/callAsFunction(_:)-34acp":{"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"DefaultInitializable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"callAsFunction(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyDeeplink","preciseIdentifier":"s:8Deeplink03AnyA0V"}],"abstract":[{"type":"text","text":"Embeds the action to take when matching this deeplink into the deeplink itself, producing a AnyDeeplink instance."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/callAsFunction(_:)-34acp","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/callasfunction(_:)-34acp"},"doc://Deeplink/documentation/Deeplink/Deeplink/parse(_:into:)":{"role":"symbol","title":"parse(_:into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Attempt to parse a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" by using the current deeplink. In case of success, the argument found by the pattern matching will be assigned to their corresponding keypath to the "},{"type":"codeVoice","code":"instance"},{"type":"text","text":" object."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/parse(_:into:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/parse(_:into:)"},"doc://Deeplink/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/Deeplink\/SH"},"doc://Deeplink/documentation/Deeplink/Deeplink/callAsFunction(assigningTo:_:)":{"role":"symbol","title":"callAsFunction(assigningTo:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"assigningTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyDeeplink","preciseIdentifier":"s:8Deeplink03AnyA0V"}],"abstract":[{"type":"text","text":"Embeds the action to take when matching this deeplink into the deeplink itself, producing a AnyDeeplink instance."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink\/callAsFunction(assigningTo:_:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplink\/callasfunction(assigningto:_:)"}}}