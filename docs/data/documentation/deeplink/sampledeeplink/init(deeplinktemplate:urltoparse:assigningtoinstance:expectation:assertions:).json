{"kind":"symbol","metadata":{"role":"symbol","externalID":"s:8Deeplink06SampleA0V16deeplinkTemplate10urlToParse09assigningF8Instance11expectation10assertionsACyxGA2AOyxG_10Foundation3URLVxyycyxctcfc","modules":[{"name":"Deeplink"}],"roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"deeplinkTemplate","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8DeeplinkAAO","kind":"typeIdentifier","text":"Deeplink"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"text":"urlToParse","kind":"externalParam"},{"kind":"text","text":": "},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"text":"assigningToInstance","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"text":"expectation","kind":"externalParam"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"assertions","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"symbolKind":"init","title":"init(deeplinkTemplate:urlToParse:assigningToInstance:expectation:assertions:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"kind":"text","text":"("},{"kind":"externalParam","text":"deeplinkTemplate"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink","kind":"typeIdentifier","text":"Deeplink","preciseIdentifier":"s:8DeeplinkAAO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"urlToParse"},{"text":": ","kind":"text"},{"text":"URL","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"assigningToInstance"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"expectation"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"assertions"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"deeplinkTemplate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The deeplink template that you want to test. It is recommended to pass the exact same template instance that you use in your "},{"code":"DeeplinkCenter","type":"codeVoice"},{"type":"text","text":" to avoid having to manually keep them in sync."}]}]},{"name":"urlToParse","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The test URL that you want to use for testing."}]}]},{"name":"assigningToInstance","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The instance of the object to which assign the values of the parsed parameters."}]}]},{"name":"expectation","content":[{"inlineContent":[{"type":"text","text":"A closure where you should declare an expectation to fulfill, using "},{"type":"codeVoice","code":"XCTestCase.expectation(description:)"},{"type":"text","text":"."}],"type":"paragraph"}]},{"name":"assertions","content":[{"type":"paragraph","inlineContent":[{"text":"A closure that you can use to verify the correctness of the parsed parameters.","type":"text"}]}]}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/Deeplink\/documentation\/Deeplink","doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink"]]},"sections":[],"abstract":[{"text":"Create a new ","type":"text"},{"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink","type":"reference","isActive":true},{"text":" to be tested within your ","type":"text"},{"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter","isActive":true,"type":"reference"},{"type":"text","text":" using the "},{"isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter\/testSampleDeeplink(_:)","type":"reference"},{"type":"text","text":" method."}],"variants":[{"paths":["\/documentation\/deeplink\/sampledeeplink\/init(deeplinktemplate:urltoparse:assigningtoinstance:expectation:assertions:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink\/init(deeplinkTemplate:urlToParse:assigningToInstance:expectation:assertions:)"},"references":{"doc://Deeplink/documentation/Deeplink/SampleDeeplink/init(deeplinkTemplate:urlToParse:assigningToInstance:expectation:assertions:)":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"deeplinkTemplate"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8DeeplinkAAO","text":"Deeplink","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"urlToParse","kind":"externalParam"},{"kind":"text","text":": "},{"text":"URL","preciseIdentifier":"s:10Foundation3URLV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"assigningToInstance","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"expectation"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"text":"assertions","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink\/init(deeplinkTemplate:urlToParse:assigningToInstance:expectation:assertions:)","abstract":[{"type":"text","text":"Create a new "},{"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink","type":"reference","isActive":true},{"text":" to be tested within your ","type":"text"},{"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter","isActive":true,"type":"reference"},{"text":" using the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter\/testSampleDeeplink(_:)","type":"reference"},{"type":"text","text":" method."}],"title":"init(deeplinkTemplate:urlToParse:assigningToInstance:expectation:assertions:)","type":"topic","kind":"symbol","url":"\/documentation\/deeplink\/sampledeeplink\/init(deeplinktemplate:urltoparse:assigningtoinstance:expectation:assertions:)","role":"symbol"},"doc://Deeplink/documentation/Deeplink/SampleDeeplink":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SampleDeeplink","kind":"identifier"}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink","abstract":[{"text":"You can use a ","type":"text"},{"type":"reference","identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink","isActive":true},{"type":"text","text":" to create unit tests that verify that the order of registrations of deeplinks in your "},{"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter","type":"reference","isActive":true},{"text":" is sound, and no template stops another from being detected.","type":"text"}],"title":"SampleDeeplink","type":"topic","kind":"symbol","url":"\/documentation\/deeplink\/sampledeeplink","navigatorTitle":[{"kind":"identifier","text":"SampleDeeplink"}],"role":"symbol"},"doc://Deeplink/documentation/Deeplink":{"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink","url":"\/documentation\/deeplink","abstract":[{"text":"A microlibrary to parse deeplinks and their arguments.","type":"text"}],"type":"topic","kind":"symbol","title":"Deeplink","role":"collection"},"doc://Deeplink/documentation/Deeplink/DeeplinksCenter/testSampleDeeplink(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"testSampleDeeplink"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"SampleDeeplink","kind":"typeIdentifier","preciseIdentifier":"s:8Deeplink06SampleA0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">) "},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter\/testSampleDeeplink(_:)","abstract":[{"text":"Pass a ","type":"text"},{"type":"reference","identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/SampleDeeplink","isActive":true},{"type":"text","text":" instance to this function to perform a deeplink registration unit test."}],"title":"testSampleDeeplink(_:)","type":"topic","kind":"symbol","url":"\/documentation\/deeplink\/deeplinkscenter\/testsampledeeplink(_:)","role":"symbol"},"doc://Deeplink/documentation/Deeplink/DeeplinksCenter":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeeplinksCenter"}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter","navigatorTitle":[{"text":"DeeplinksCenter","kind":"identifier"}],"role":"symbol","title":"DeeplinksCenter","kind":"symbol","url":"\/documentation\/deeplink\/deeplinkscenter","type":"topic","abstract":[{"type":"text","text":"Register deeplinks and parse URLs."}]},"doc://Deeplink/documentation/Deeplink/Deeplink":{"url":"\/documentation\/deeplink\/deeplink","identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink","navigatorTitle":[{"text":"Deeplink","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"code":"enum","type":"codeVoice"},{"text":" that represents a deeplink template.","type":"text"}],"title":"Deeplink","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deeplink"}],"type":"topic"}}}