{"hierarchy":{"paths":[["doc:\/\/Deeplink\/tutorials\/Table-of-Contents","doc:\/\/Deeplink\/tutorials\/Table-of-Contents\/$volume","doc:\/\/Deeplink\/tutorials\/Table-of-Contents\/Using-the-library"]],"reference":"doc:\/\/Deeplink\/tutorials\/Table-of-Contents","modules":[{"reference":"doc:\/\/Deeplink\/tutorials\/Table-of-Contents\/Using-the-library","projects":[{"sections":[{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-one-deeplink","kind":"task"},{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-a-deeplink-that-catches-a-list-of-parameters","kind":"task"},{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-more-deeplinks"}],"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink"},{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder","sections":[{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder#Implementation","kind":"task"},{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder#Conditionally-removing-templates","kind":"task"}]},{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage","sections":[{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage#Altering-the-matching-behavior"},{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage#Using-DefaultInitializable","kind":"task"}]}]}]},"variants":[{"paths":["\/tutorials\/deeplink\/using-a-resultbuilder"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"project","categoryPathComponent":"Table-of-Contents","title":"Registering Deeplinks with a ResultBuilder","category":"Documentation"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[{"title":"Registering Deeplinks with a ResultBuilder","estimatedTimeInMinutes":10,"kind":"hero","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need advanced behaviors, you can also register your "},{"type":"reference","identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink","isActive":true},{"type":"text","text":" templates using a "},{"type":"codeVoice","code":"@resultBuilder"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"For example, you could enable or disable a specific deeplinking behavior based on a feature flag, or some AB testing parameters.","type":"text"}]}],"chapter":"Using the library"},{"kind":"tasks","tasks":[{"anchor":"Implementation","stepsSection":[{"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Registering a literal deeplink template with no arguments only gives you back the URL, in case of a match."}]}],"media":null,"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"You can use the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter\/init(_:)","type":"reference"},{"text":" initializer to open a closure where you can register deeplinks in a different way.","type":"text"}]}],"code":"ResultBuilder 1.swift","type":"step"},{"caption":[],"media":null,"type":"step","code":"ResultBuilder 2.swift","content":[{"inlineContent":[{"text":"Registering a deeplink template with arguments is very similar, but you will get a ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":" inside the closure as well."}],"type":"paragraph"}],"runtimePreview":null},{"code":"ResultBuilder 3.swift","runtimePreview":null,"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Since our old ","type":"text"},{"type":"codeVoice","code":"TestData"},{"type":"text","text":" type conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DefaultInitializable"},{"type":"text","text":", we don’t need to provide an instance to assign values to."}]}],"caption":[{"type":"paragraph","inlineContent":[{"text":"In case we cannot conform to this protocol, we can still provide an instance using this other overload.","type":"text"}]}],"media":null}],"contentSection":[{"content":[{"inlineContent":[{"text":"Let’s go through an example where I want to AB test presenting a specific screen, versus just presenting a webview with the corresponding web content.","type":"text"}],"type":"paragraph"}],"kind":"fullWidth"}],"title":"Implementation"},{"contentSection":[{"kind":"fullWidth","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s go through an example where I want to AB test presenting a specific screen, versus just presenting a webview with the corresponding web content."}]}]}],"title":"Conditionally removing templates","stepsSection":[{"type":"paragraph","inlineContent":[{"type":"text","text":"One way to approach this is to add a check inside the "},{"type":"codeVoice","code":"isMatching"},{"type":"text","text":" function."}]},{"type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"This function is called every time a new URL is evaluated.","type":"text"}]}],"runtimePreview":null,"code":"ResultBuilder 4.swift","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you have a function "},{"type":"codeVoice","code":"magicABTestIsOn"},{"type":"text","text":" that gives you a "},{"type":"codeVoice","code":"Bool"},{"text":" to enable\/disable a specific behavior, you can call it from inside the ","type":"text"},{"type":"codeVoice","code":"isMatching"},{"type":"text","text":" function."}]}]},{"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"If you only want to check once when you first initialize your ","type":"text"},{"type":"reference","identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter","isActive":true},{"text":", you can use the ","type":"text"},{"code":"@resultBuilder","type":"codeVoice"},{"type":"text","text":" capabilities to potentially remove a template registration from the evaluation list all together."}]}],"media":null,"code":"ResultBuilder 5.swift","runtimePreview":null}],"anchor":"Conditionally-removing-templates"}]},{"abstract":[{"text":"This tutorial is a small collection of advanced tips and tricks.","type":"text"}],"action":{"type":"reference","identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage","isActive":true,"overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}]},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Advanced Usage"}],"kind":"project","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder"},"references":{"doc://Deeplink/tutorials/Deeplink/Advanced-Usage#Altering-the-matching-behavior":{"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage#Altering-the-matching-behavior","abstract":[{"type":"text","text":"This tutorial is a small collection of advanced tips and tricks."}],"type":"section","url":"\/tutorials\/deeplink\/advanced-usage#Altering-the-matching-behavior","title":"Altering the matching behavior","kind":"section","role":"pseudoSymbol"},"ResultBuilder 4.swift":{"fileName":"ResultBuilder demo.swift","content":["import Deeplink","","let link1 = \"\/test\/1\" as Deeplink<Void>","","func magicABTestIsOn() -> Bool { Bool.random() }","","let center = DeeplinksCenter {","","    link1 { url in","        if !magicABTestIsOn() { return false }","","        \/\/ Present Screen A","        return true","    }","","    link1 { url in","","        \/\/ Present WebView","        return true","    }","}","","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/1\")!)"],"identifier":"ResultBuilder 4.swift","syntax":"swift","highlights":[],"type":"file","fileType":"swift"},"doc://Deeplink/documentation/Deeplink/DefaultInitializable":{"type":"topic","navigatorTitle":[{"text":"DefaultInitializable","kind":"identifier"}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DefaultInitializable","role":"symbol","abstract":[{"text":"A protocol which only requirement is an empty initializer.","type":"text"}],"kind":"symbol","title":"DefaultInitializable","url":"\/documentation\/deeplink\/defaultinitializable","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultInitializable"}]},"doc://Deeplink/tutorials/Deeplink/Advanced-Usage#Using-DefaultInitializable":{"title":"Using DefaultInitializable","abstract":[{"type":"text","text":"This tutorial is a small collection of advanced tips and tricks."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage#Using-DefaultInitializable","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/deeplink\/advanced-usage#Using-DefaultInitializable"},"doc://Deeplink/tutorials/Deeplink/Using-a-ResultBuilder#Conditionally-removing-templates":{"title":"Conditionally removing templates","abstract":[{"type":"text","text":"If you need advanced behaviors, you can also register your "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink"},{"type":"text","text":" templates using a "},{"type":"codeVoice","code":"@resultBuilder"},{"type":"text","text":"."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder#Conditionally-removing-templates","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/deeplink\/using-a-resultbuilder#Conditionally-removing-templates"},"doc://Deeplink/documentation/Deeplink/DeeplinksCenter":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeeplinksCenter"}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter","navigatorTitle":[{"text":"DeeplinksCenter","kind":"identifier"}],"role":"symbol","title":"DeeplinksCenter","kind":"symbol","url":"\/documentation\/deeplink\/deeplinkscenter","type":"topic","abstract":[{"type":"text","text":"Register deeplinks and parse URLs."}]},"doc://Deeplink/documentation/Deeplink/DeeplinksCenter/init(_:)":{"url":"\/documentation\/deeplink\/deeplinkscenter\/init(_:)","role":"symbol","identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter\/init(_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializer that takes a DeeplinkBuilder closure."}],"fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"text":"init","kind":"identifier"},{"text":"(() -> [","kind":"text"},{"text":"AnyDeeplink","preciseIdentifier":"s:8Deeplink03AnyA0V","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"title":"init(_:)"},"doc://Deeplink/tutorials/Deeplink/Adding-a-Deeplink#Adding-more-deeplinks":{"title":"Adding more deeplinks","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-more-deeplinks","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/deeplink\/adding-a-deeplink#Adding-more-deeplinks"},"doc://Deeplink/documentation/Deeplink/Deeplink":{"url":"\/documentation\/deeplink\/deeplink","identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink","navigatorTitle":[{"text":"Deeplink","kind":"identifier"}],"abstract":[{"type":"text","text":"An "},{"code":"enum","type":"codeVoice"},{"text":" that represents a deeplink template.","type":"text"}],"title":"Deeplink","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deeplink"}],"type":"topic"},"doc://Deeplink/tutorials/Deeplink/Using-a-ResultBuilder#Implementation":{"title":"Implementation","abstract":[{"type":"text","text":"If you need advanced behaviors, you can also register your "},{"type":"reference","identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink","isActive":true},{"type":"text","text":" templates using a "},{"code":"@resultBuilder","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder#Implementation","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/deeplink\/using-a-resultbuilder#Implementation"},"doc://Deeplink/tutorials/Table-of-Contents/Using-the-library":{"title":"Using the library","abstract":[],"identifier":"doc:\/\/Deeplink\/tutorials\/Table-of-Contents\/Using-the-library","role":"article","type":"topic","kind":"article","url":"\/tutorials\/table-of-contents\/using-the-library"},"doc://Deeplink/tutorials/Deeplink/Adding-a-Deeplink#Adding-one-deeplink":{"title":"Adding one deeplink","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-one-deeplink","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/deeplink\/adding-a-deeplink#Adding-one-deeplink"},"doc://Deeplink/tutorials/Deeplink/Adding-a-Deeplink":{"title":"Adding Deeplinks","abstract":[{"text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates.","type":"text"}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink","url":"\/tutorials\/deeplink\/adding-a-deeplink","type":"topic","role":"project","estimatedTime":"10min","kind":"project"},"doc://Deeplink/tutorials/Deeplink/Adding-a-Deeplink#Adding-a-deeplink-that-catches-a-list-of-parameters":{"title":"Adding a deeplink that catches a list of parameters","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-a-deeplink-that-catches-a-list-of-parameters","role":"pseudoSymbol","type":"section","kind":"section","url":"\/tutorials\/deeplink\/adding-a-deeplink#Adding-a-deeplink-that-catches-a-list-of-parameters"},"ResultBuilder 2.swift":{"fileName":"ResultBuilder demo.swift","content":["import Deeplink","","struct TestData: DefaultInitializable {","    var arg1: String?","    var arg2: String?","}","","let link1 = \"\/test\/1\" as Deeplink<Void>","let link2 = try \"\/test\/\\(\\.arg1)\/\\(\\.arg2)\" as Deeplink<TestData>","","let center = DeeplinksCenter {","","    link1 { url in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test\/1\")","        return true","    }","","    link2 { url, value in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test\/a\/b\")","        XCTAssertEqual(value.arg1, \"a\")","        XCTAssertEqual(value.arg2, \"b\")","        return true","    }","}","","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/1\")!)","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/a\/b\")!)"],"identifier":"ResultBuilder 2.swift","syntax":"swift","highlights":[{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":9},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":27}],"type":"file","fileType":"swift"},"ResultBuilder 3.swift":{"fileName":"ResultBuilder demo.swift","content":["import Deeplink","","struct TestData: DefaultInitializable {","    var arg1: String?","    var arg2: String?","}","","struct TestData2 {","    var arg1: String?","    var arg2: String?","}","","let link1 = \"\/test\/1\" as Deeplink<Void>","let link2 = try \"\/test\/\\(\\.arg1)\/\\(\\.arg2)\" as Deeplink<TestData>","let link3 = try \"\/test2\/\\(\\.arg1)\/\\(\\.arg2)\" as Deeplink<TestData2>","","let center = DeeplinksCenter {","","    link1 { url in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test\/1\")","        return true","    }","","    link2 { url, value in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test\/a\/b\")","        XCTAssertEqual(value.arg1, \"a\")","        XCTAssertEqual(value.arg2, \"b\")","        return true","    }","","    link3(","        assigningTo: .init(arg1: \"default\", arg2: \"default\")","    ) { (url, value) -> Bool in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test2\/a\/b\")","        XCTAssertEqual(value.arg1, \"a\")","        XCTAssertEqual(value.arg2, \"b\")","        return true","    }","}","","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/1\")!)","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/a\/b\")!)","try center.parse(url: URL(string: \"https:\/\/apple.com\/test2\/a\/b\")!)"],"identifier":"ResultBuilder 3.swift","syntax":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":15},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":43}],"type":"file","fileType":"swift"},"ResultBuilder 5.swift":{"fileName":"ResultBuilder demo.swift","content":["import Deeplink","","let link1 = \"\/test\/1\" as Deeplink<Void>","","func magicABTestIsOn() -> Bool { Bool.random() }","","let center = DeeplinksCenter {","","    if magicABTestIsOn() {","        link1 { url in","            \/\/ Present Screen A","            return true","        }","    }","","    link1 { url in","","        \/\/ Present WebView","        return true","    }","}","","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/1\")!)"],"identifier":"ResultBuilder 5.swift","syntax":"swift","highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}],"type":"file","fileType":"swift"},"doc://Deeplink/tutorials/Deeplink/Using-a-ResultBuilder":{"estimatedTime":"10min","identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder","abstract":[{"text":"If you need advanced behaviors, you can also register your ","type":"text"},{"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink","type":"reference","isActive":true},{"type":"text","text":" templates using a "},{"type":"codeVoice","code":"@resultBuilder"},{"text":".","type":"text"}],"title":"Registering Deeplinks with a ResultBuilder","role":"project","kind":"project","url":"\/tutorials\/deeplink\/using-a-resultbuilder","type":"topic"},"doc://Deeplink/tutorials/Table-of-Contents":{"identifier":"doc:\/\/Deeplink\/tutorials\/Table-of-Contents","abstract":[{"text":"These tutorials will explain how to add deeplinks to your app, and how to manage more complex situations like overlapping deeplink templates or choosing at runtime whether to match a URL or not.","type":"text"}],"title":"🎣 All about Deeplinks","role":"overview","kind":"overview","url":"\/tutorials\/table-of-contents","type":"topic"},"ResultBuilder 1.swift":{"fileName":"ResultBuilder demo.swift","content":["import Deeplink","","let link1 = \"\/test\/1\" as Deeplink<Void>","","let center = DeeplinksCenter {","","    link1 { url in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test\/1\")","        return true","    }","}","","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/1\")!)"],"identifier":"ResultBuilder 1.swift","syntax":"swift","highlights":[],"type":"file","fileType":"swift"},"doc://Deeplink/tutorials/Deeplink/Advanced-Usage":{"kind":"project","abstract":[{"text":"This tutorial is a small collection of advanced tips and tricks.","type":"text"}],"title":"Advanced Usage","estimatedTime":"10min","url":"\/tutorials\/deeplink\/advanced-usage","identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage","type":"topic","role":"project"}}}