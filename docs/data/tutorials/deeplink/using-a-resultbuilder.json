{"variants":[{"paths":["\/tutorials\/deeplink\/using-a-resultbuilder"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"kind":"hero","title":"Registering Deeplinks with a ResultBuilder","chapter":"Using the library","estimatedTimeInMinutes":10,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need advanced behaviors, you can also register your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink"},{"type":"text","text":" templates using a "},{"type":"codeVoice","code":"@resultBuilder"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, you could enable or disable a specific deeplinking behavior based on a feature flag, or some AB testing parameters."}]}]},{"kind":"tasks","tasks":[{"anchor":"Implementation","title":"Implementation","contentSection":[{"kind":"fullWidth","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Letâ€™s go through an example where I want to AB test presenting a specific screen, versus just presenting a webview with the corresponding web content."}]}]}],"stepsSection":[{"code":"ResultBuilder 1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter\/init(_:)"},{"type":"text","text":" initializer to open a closure where you can register deeplinks in a different way."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Registering a literal deeplink template with no arguments only gives you back the URL, in case of a match."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"ResultBuilder 2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Registering a deeplink template with arguments is very similar, but you will get a "},{"type":"codeVoice","code":"Value"},{"type":"text","text":" inside the closure as well."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"ResultBuilder 3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Since our old "},{"type":"codeVoice","code":"TestData"},{"type":"text","text":" type conforms to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DefaultInitializable"},{"type":"text","text":", we donâ€™t need to provide an instance to assign values to."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In case we cannot conform to this protocol, we can still provide an instance using this other overload."}]}],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Conditionally-removing-templates","title":"Conditionally removing templates","contentSection":[{"kind":"fullWidth","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Letâ€™s go through an example where I want to AB test presenting a specific screen, versus just presenting a webview with the corresponding web content."}]}]}],"stepsSection":[{"type":"paragraph","inlineContent":[{"type":"text","text":"One way to approach this is to add a check inside the "},{"type":"codeVoice","code":"isMatching"},{"type":"text","text":" function."}]},{"code":"ResultBuilder 4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you have a function "},{"type":"codeVoice","code":"magicABTestIsOn"},{"type":"text","text":" that gives you a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" to enable\/disable a specific behavior, you can call it from inside the "},{"type":"codeVoice","code":"isMatching"},{"type":"text","text":" function."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This function is called every time a new URL is evaluated."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"ResultBuilder 5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you only want to check once when you first initialize your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter"},{"type":"text","text":", you can use the "},{"type":"codeVoice","code":"@resultBuilder"},{"type":"text","text":" capabilities to potentially remove a template registration from the evaluation list all together."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Advanced Usage","abstract":[{"type":"text","text":"This tutorial is a small collection of advanced tips and tricks."}]}],"identifier":{"url":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Registering Deeplinks with a ResultBuilder","categoryPathComponent":"Table-of-Contents","role":"project","category":"Documentation"},"hierarchy":{"modules":[{"reference":"doc:\/\/Deeplink\/tutorials\/Table-of-Contents\/Using-the-library","projects":[{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink","sections":[{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-one-deeplink"},{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-a-deeplink-that-catches-a-list-of-parameters"},{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-more-deeplinks"}]},{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder","sections":[{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder#Implementation"},{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder#Conditionally-removing-templates"}]},{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage","sections":[{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage#Altering-the-matching-behavior"},{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage#Using-DefaultInitializable"}]}]}],"reference":"doc:\/\/Deeplink\/tutorials\/Table-of-Contents","paths":[["doc:\/\/Deeplink\/tutorials\/Table-of-Contents","doc:\/\/Deeplink\/tutorials\/Table-of-Contents\/$volume","doc:\/\/Deeplink\/tutorials\/Table-of-Contents\/Using-the-library"]]},"references":{"doc://Deeplink/tutorials/Table-of-Contents":{"role":"overview","title":"ðŸŽ£ All about Deeplinks","abstract":[{"type":"text","text":"These tutorials will explain how to add deeplinks to your app, and how to manage more complex situations like overlapping deeplink templates or choosing at runtime whether to match a URL or not."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Table-of-Contents","kind":"overview","type":"topic","url":"\/tutorials\/table-of-contents"},"doc://Deeplink/tutorials/Deeplink/Advanced-Usage#Altering-the-matching-behavior":{"role":"pseudoSymbol","title":"Altering the matching behavior","abstract":[{"type":"text","text":"This tutorial is a small collection of advanced tips and tricks."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage#Altering-the-matching-behavior","kind":"section","type":"section","url":"\/tutorials\/deeplink\/advanced-usage#Altering-the-matching-behavior"},"doc://Deeplink/documentation/Deeplink/Deeplink":{"role":"symbol","title":"Deeplink","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deeplink"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"enum"},{"type":"text","text":" that represents a deeplink template."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Deeplink"}],"url":"\/documentation\/deeplink\/deeplink"},"ResultBuilder 4.swift":{"syntax":"swift","content":["import Deeplink","","let link1 = \"\/test\/1\" as Deeplink<Void>","","func magicABTestIsOn() -> Bool { Bool.random() }","","let center = DeeplinksCenter {","","    link1 { url in","        if !magicABTestIsOn() { return false }","","        \/\/ Present Screen A","        return true","    }","","    link1 { url in","","        \/\/ Present WebView","        return true","    }","}","","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/1\")!)"],"fileName":"ResultBuilder demo.swift","identifier":"ResultBuilder 4.swift","type":"file","fileType":"swift","highlights":[]},"doc://Deeplink/tutorials/Deeplink/Using-a-ResultBuilder":{"role":"project","title":"Registering Deeplinks with a ResultBuilder","estimatedTime":"10min","abstract":[{"type":"text","text":"If you need advanced behaviors, you can also register your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink"},{"type":"text","text":" templates using a "},{"type":"codeVoice","code":"@resultBuilder"},{"type":"text","text":"."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder","kind":"project","type":"topic","url":"\/tutorials\/deeplink\/using-a-resultbuilder"},"doc://Deeplink/tutorials/Deeplink/Adding-a-Deeplink":{"role":"project","title":"Adding Deeplinks","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink","kind":"project","type":"topic","url":"\/tutorials\/deeplink\/adding-a-deeplink"},"doc://Deeplink/tutorials/Deeplink/Using-a-ResultBuilder#Implementation":{"role":"pseudoSymbol","title":"Implementation","abstract":[{"type":"text","text":"If you need advanced behaviors, you can also register your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink"},{"type":"text","text":" templates using a "},{"type":"codeVoice","code":"@resultBuilder"},{"type":"text","text":"."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder#Implementation","kind":"section","type":"section","url":"\/tutorials\/deeplink\/using-a-resultbuilder#Implementation"},"doc://Deeplink/documentation/Deeplink/DefaultInitializable":{"role":"symbol","title":"DefaultInitializable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultInitializable"}],"abstract":[{"type":"text","text":"A protocol which only requirement is an empty initializer."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DefaultInitializable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefaultInitializable"}],"url":"\/documentation\/deeplink\/defaultinitializable"},"doc://Deeplink/tutorials/Deeplink/Adding-a-Deeplink#Adding-more-deeplinks":{"role":"pseudoSymbol","title":"Adding more deeplinks","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-more-deeplinks","kind":"section","type":"section","url":"\/tutorials\/deeplink\/adding-a-deeplink#Adding-more-deeplinks"},"ResultBuilder 3.swift":{"syntax":"swift","content":["import Deeplink","","struct TestData: DefaultInitializable {","    var arg1: String?","    var arg2: String?","}","","struct TestData2 {","    var arg1: String?","    var arg2: String?","}","","let link1 = \"\/test\/1\" as Deeplink<Void>","let link2 = try \"\/test\/\\(\\.arg1)\/\\(\\.arg2)\" as Deeplink<TestData>","let link3 = try \"\/test2\/\\(\\.arg1)\/\\(\\.arg2)\" as Deeplink<TestData2>","","let center = DeeplinksCenter {","","    link1 { url in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test\/1\")","        return true","    }","","    link2 { url, value in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test\/a\/b\")","        XCTAssertEqual(value.arg1, \"a\")","        XCTAssertEqual(value.arg2, \"b\")","        return true","    }","","    link3(","        assigningTo: .init(arg1: \"default\", arg2: \"default\")","    ) { (url, value) -> Bool in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test2\/a\/b\")","        XCTAssertEqual(value.arg1, \"a\")","        XCTAssertEqual(value.arg2, \"b\")","        return true","    }","}","","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/1\")!)","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/a\/b\")!)","try center.parse(url: URL(string: \"https:\/\/apple.com\/test2\/a\/b\")!)"],"fileName":"ResultBuilder demo.swift","identifier":"ResultBuilder 3.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":15},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":43}]},"doc://Deeplink/tutorials/Deeplink/Adding-a-Deeplink#Adding-a-deeplink-that-catches-a-list-of-parameters":{"role":"pseudoSymbol","title":"Adding a deeplink that catches a list of parameters","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-a-deeplink-that-catches-a-list-of-parameters","kind":"section","type":"section","url":"\/tutorials\/deeplink\/adding-a-deeplink#Adding-a-deeplink-that-catches-a-list-of-parameters"},"doc://Deeplink/tutorials/Deeplink/Adding-a-Deeplink#Adding-one-deeplink":{"role":"pseudoSymbol","title":"Adding one deeplink","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Adding-a-Deeplink#Adding-one-deeplink","kind":"section","type":"section","url":"\/tutorials\/deeplink\/adding-a-deeplink#Adding-one-deeplink"},"doc://Deeplink/tutorials/Deeplink/Using-a-ResultBuilder#Conditionally-removing-templates":{"role":"pseudoSymbol","title":"Conditionally removing templates","abstract":[{"type":"text","text":"If you need advanced behaviors, you can also register your "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/Deeplink"},{"type":"text","text":" templates using a "},{"type":"codeVoice","code":"@resultBuilder"},{"type":"text","text":"."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Using-a-ResultBuilder#Conditionally-removing-templates","kind":"section","type":"section","url":"\/tutorials\/deeplink\/using-a-resultbuilder#Conditionally-removing-templates"},"ResultBuilder 1.swift":{"syntax":"swift","content":["import Deeplink","","let link1 = \"\/test\/1\" as Deeplink<Void>","","let center = DeeplinksCenter {","","    link1 { url in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test\/1\")","        return true","    }","}","","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/1\")!)"],"fileName":"ResultBuilder demo.swift","identifier":"ResultBuilder 1.swift","type":"file","fileType":"swift","highlights":[]},"ResultBuilder 2.swift":{"syntax":"swift","content":["import Deeplink","","struct TestData: DefaultInitializable {","    var arg1: String?","    var arg2: String?","}","","let link1 = \"\/test\/1\" as Deeplink<Void>","let link2 = try \"\/test\/\\(\\.arg1)\/\\(\\.arg2)\" as Deeplink<TestData>","","let center = DeeplinksCenter {","","    link1 { url in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test\/1\")","        return true","    }","","    link2 { url, value in","        XCTAssertEqual(url.absoluteString, \"https:\/\/apple.com\/test\/a\/b\")","        XCTAssertEqual(value.arg1, \"a\")","        XCTAssertEqual(value.arg2, \"b\")","        return true","    }","}","","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/1\")!)","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/a\/b\")!)"],"fileName":"ResultBuilder demo.swift","identifier":"ResultBuilder 2.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":9},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":27}]},"doc://Deeplink/tutorials/Deeplink/Advanced-Usage":{"role":"project","title":"Advanced Usage","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial is a small collection of advanced tips and tricks."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage","kind":"project","type":"topic","url":"\/tutorials\/deeplink\/advanced-usage"},"doc://Deeplink/documentation/Deeplink/DeeplinksCenter":{"role":"symbol","title":"DeeplinksCenter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeeplinksCenter"}],"abstract":[{"type":"text","text":"Register deeplinks and parse URLs."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeeplinksCenter"}],"url":"\/documentation\/deeplink\/deeplinkscenter"},"doc://Deeplink/documentation/Deeplink/DeeplinksCenter/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> ["},{"kind":"typeIdentifier","text":"AnyDeeplink","preciseIdentifier":"s:8Deeplink03AnyA0V"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"Initializer that takes a DeeplinkBuilder closure."}],"identifier":"doc:\/\/Deeplink\/documentation\/Deeplink\/DeeplinksCenter\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/deeplink\/deeplinkscenter\/init(_:)"},"doc://Deeplink/tutorials/Table-of-Contents/Using-the-library":{"role":"article","title":"Using the library","abstract":[],"identifier":"doc:\/\/Deeplink\/tutorials\/Table-of-Contents\/Using-the-library","kind":"article","type":"topic","url":"\/tutorials\/table-of-contents\/using-the-library"},"doc://Deeplink/tutorials/Deeplink/Advanced-Usage#Using-DefaultInitializable":{"role":"pseudoSymbol","title":"Using DefaultInitializable","abstract":[{"type":"text","text":"This tutorial is a small collection of advanced tips and tricks."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/Advanced-Usage#Using-DefaultInitializable","kind":"section","type":"section","url":"\/tutorials\/deeplink\/advanced-usage#Using-DefaultInitializable"},"ResultBuilder 5.swift":{"syntax":"swift","content":["import Deeplink","","let link1 = \"\/test\/1\" as Deeplink<Void>","","func magicABTestIsOn() -> Bool { Bool.random() }","","let center = DeeplinksCenter {","","    if magicABTestIsOn() {","        link1 { url in","            \/\/ Present Screen A","            return true","        }","    }","","    link1 { url in","","        \/\/ Present WebView","        return true","    }","}","","try center.parse(url: URL(string: \"https:\/\/apple.com\/test\/1\")!)"],"fileName":"ResultBuilder demo.swift","identifier":"ResultBuilder 5.swift","type":"file","fileType":"swift","highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}]}}}