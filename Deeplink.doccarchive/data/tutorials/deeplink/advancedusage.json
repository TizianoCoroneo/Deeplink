{"schemaVersion":{"major":0,"minor":1,"patch":0},"sections":[{"kind":"hero","title":"Advanced Usage","chapter":"Using the library","estimatedTimeInMinutes":10,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This tutorial is a small collection of advanced tips and tricks."}]}]},{"kind":"tasks","tasks":[{"anchor":"Altering-the-matching-behavior","title":"Altering the matching behavior","contentSection":[{"kind":"fullWidth","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In normal usage of this library, you "},{"type":"codeVoice","code":"return true"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"ifMatching"},{"type":"text","text":" closure on the "},{"type":"codeVoice","code":"DeeplinksCenter"},{"type":"text","text":" "},{"type":"codeVoice","code":"register"},{"type":"text","text":" methods."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"What if we returned false? Why would you do that?"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this section, we’ll implement a simple AB testing behavior for interpreting deeplinks."}]}]}],"stepsSection":[{"code":"AdvancedUsage 1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s start from a simple setup: we have only our product deeplink."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"What we want is to show one screen to 50% of the users and a different version of that screen to the rest. Let’s say that we have some kind of "},{"type":"codeVoice","code":"isMagicOn()"},{"type":"text","text":" function that returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if we should show the alternative view."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"AdvancedUsage 2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can embed the check directly inside the "},{"type":"codeVoice","code":"ifMatching"},{"type":"text","text":" function…"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"AdvancedUsage 3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Or we can register the same deeplink template twice."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the first registration we check "},{"type":"codeVoice","code":"isMagicOn"},{"type":"text","text":" and we only continue if it is "},{"type":"codeVoice","code":"true"},{"type":"text","text":". This means that if the other registration will only ever be executed if "},{"type":"codeVoice","code":"isMagicOn"},{"type":"text","text":" is "},{"type":"codeVoice","code":"false"},{"type":"text","text":", since "},{"type":"codeVoice","code":"DeeplinksCenter"},{"type":"text","text":" will stop evaluating templates at the first successful match. This also makes it really easy to remove the Magic part if… needed."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"AdvancedUsage 4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Since you also get the original URL that is being evaluated, you can also perform additional URL checking logic in the "},{"type":"codeVoice","code":"ifMatching"},{"type":"text","text":" closure, returning "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if the checks fail."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Using-DefaultInitializable","title":"Using DefaultInitializable","contentSection":[{"kind":"fullWidth","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“Why do I have to pass an instance of my value to the register function?”"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The problem is that the library needs an initialized object to assign values to. That’s it: or you give an initialized object, or you define a struct that conforms to the utility protocol "},{"type":"codeVoice","code":"DefaultInitializable"},{"type":"text","text":", which only requirement is a empty "},{"type":"codeVoice","code":"init()"},{"type":"text","text":"."}]}]}],"stepsSection":[{"code":"AdvancedUsage 5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s start from our product deeplink."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Normally, we pass an instance of Product to the register function."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"AdvancedUsage 6.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can make Product conform to "},{"type":"codeVoice","code":"DefaultInitializable"},{"type":"text","text":" so that we don’t have to pass an instance at registration time, but a new instance will be generated every time you need to parse a URL."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]}],"identifier":{"url":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AdvancedUsage","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Advanced Usage","categoryPathComponent":"Tutorial-Table-of-Contents","role":"project","category":"Documentation"},"hierarchy":{"modules":[{"reference":"doc:\/\/Deeplink\/tutorials\/Tutorial-Table-of-Contents\/Using-the-library","projects":[{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AddingADeeplink","sections":[{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AddingADeeplink#Adding-one-deeplink"},{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AddingADeeplink#Adding-more-deeplinks"}]},{"reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AdvancedUsage","sections":[{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AdvancedUsage#Altering-the-matching-behavior"},{"kind":"task","reference":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AdvancedUsage#Using-DefaultInitializable"}]}]}],"reference":"doc:\/\/Deeplink\/tutorials\/Tutorial-Table-of-Contents","paths":[["doc:\/\/Deeplink\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/Deeplink\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/Deeplink\/tutorials\/Tutorial-Table-of-Contents\/Using-the-library"]]},"documentVersion":0,"references":{"doc://Deeplink/tutorials/Deeplink/AdvancedUsage#Altering-the-matching-behavior":{"role":"pseudoSymbol","title":"Altering the matching behavior","abstract":[{"type":"text","text":"This tutorial is a small collection of advanced tips and tricks."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AdvancedUsage#Altering-the-matching-behavior","kind":"section","type":"section","url":"\/tutorials\/deeplink\/advancedusage#Altering-the-matching-behavior"},"doc://Deeplink/tutorials/Tutorial-Table-of-Contents/Using-the-library":{"role":"article","title":"Using the library","abstract":[],"identifier":"doc:\/\/Deeplink\/tutorials\/Tutorial-Table-of-Contents\/Using-the-library","kind":"article","type":"topic","url":"\/tutorials\/tutorial-table-of-contents\/using-the-library"},"AdvancedUsage 2.swift":{"syntax":"swift","content":["","\/\/ Example link: `https:\/\/example.com\/product\/123`","","import Deeplink","","struct Product {","    var productId: String?","}","","let productDeeplink: Deeplink<Product> = try! \"\/product\/\\(\\.productId)\"","","func isMagicOn() -> Bool { true }","","let center = DeeplinksCenter()","","center","    .register(","        deeplink: productDeeplink,","        assigningTo: Product(),","        ifMatching: { url, value in","","        if isMagicOn() {","            \/\/ Present the magic product view.","        } else {","            \/\/ Present the normal product view.","        }","","        return true","    })"],"fileName":"Altering matching.swift","identifier":"AdvancedUsage 2.swift","type":"file","fileType":"swift","highlights":[{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29}]},"doc://Deeplink/tutorials/Tutorial-Table-of-Contents":{"role":"overview","title":"All about Deeplinks","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app, and how to manage more complex situations like overlapping deeplink templates or choosing at runtime whether to match a URL or not."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Tutorial-Table-of-Contents","kind":"overview","type":"topic","url":"\/tutorials\/tutorial-table-of-contents"},"AdvancedUsage 1.swift":{"syntax":"swift","content":["","\/\/ Example link: `https:\/\/example.com\/product\/123`","","import Deeplink","","struct Product {","    var productId: String?","}","","let productDeeplink: Deeplink<Product> = try! \"\/product\/\\(\\.productId)\"","","func isMagicOn() -> Bool { true }"],"fileName":"Altering matching.swift","identifier":"AdvancedUsage 1.swift","type":"file","fileType":"swift","highlights":[]},"doc://Deeplink/tutorials/Deeplink/AddingADeeplink#Adding-more-deeplinks":{"role":"pseudoSymbol","title":"Adding more deeplinks","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AddingADeeplink#Adding-more-deeplinks","kind":"section","type":"section","url":"\/tutorials\/deeplink\/addingadeeplink#Adding-more-deeplinks"},"AdvancedUsage 6.swift":{"syntax":"swift","content":["","\/\/ Example link: `https:\/\/example.com\/product\/123`","","import Deeplink","","struct Product: DefaultInitializable {","    var productId: String?","}","","let productDeeplink: Deeplink<Product> = try! \"\/product\/\\(\\.productId)\"","","let center = DeeplinksCenter()","","center","    .register(","        deeplink: productDeeplink,","        ifMatching: { url, value in","","        \/\/ Present the product view.","","        return true","    })"],"fileName":"DefaultInitializable demo.swift","identifier":"AdvancedUsage 6.swift","type":"file","fileType":"swift","highlights":[{"line":6}]},"doc://Deeplink/tutorials/Deeplink/AdvancedUsage":{"role":"project","title":"Advanced Usage","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial is a small collection of advanced tips and tricks."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AdvancedUsage","kind":"project","type":"topic","url":"\/tutorials\/deeplink\/advancedusage"},"AdvancedUsage 5.swift":{"syntax":"swift","content":["","\/\/ Example link: `https:\/\/example.com\/product\/123`","","import Deeplink","","struct Product {","    var productId: String?","}","","let productDeeplink: Deeplink<Product> = try! \"\/product\/\\(\\.productId)\"","","let center = DeeplinksCenter()","","center","    .register(","        deeplink: productDeeplink,","        assigningTo: Product(),","        ifMatching: { url, value in","","        \/\/ Present the product view.","","        return true","    })"],"fileName":"DefaultInitializable demo.swift","identifier":"AdvancedUsage 5.swift","type":"file","fileType":"swift","highlights":[]},"AdvancedUsage 3.swift":{"syntax":"swift","content":["","\/\/ Example link: `https:\/\/example.com\/product\/123`","","import Deeplink","","struct Product {","    var productId: String?","}","","let productDeeplink: Deeplink<Product> = try! \"\/product\/\\(\\.productId)\"","","func isMagicOn() -> Bool { true }","","let center = DeeplinksCenter()","","center","    .register(","        deeplink: productDeeplink,","        assigningTo: Product(),","        ifMatching: { url, value in","","        guard isMagicOn() else { return false }","        \/\/ Present the magic product view.","","        return true","    })","    .register(","        deeplink: productDeeplink,","        assigningTo: Product(),","        ifMatching: { url, value in","","        \/\/ Present the normal product view.","","        return true","    })"],"fileName":"Altering matching.swift","identifier":"AdvancedUsage 3.swift","type":"file","fileType":"swift","highlights":[{"line":22},{"line":23},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35}]},"doc://Deeplink/tutorials/Deeplink/AddingADeeplink#Adding-one-deeplink":{"role":"pseudoSymbol","title":"Adding one deeplink","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AddingADeeplink#Adding-one-deeplink","kind":"section","type":"section","url":"\/tutorials\/deeplink\/addingadeeplink#Adding-one-deeplink"},"doc://Deeplink/tutorials/Deeplink/AddingADeeplink":{"role":"project","title":"Adding Deeplinks","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial will explain how to add deeplinks to your app and how to handle overlapping deeplink templates."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AddingADeeplink","kind":"project","type":"topic","url":"\/tutorials\/deeplink\/addingadeeplink"},"doc://Deeplink/tutorials/Deeplink/AdvancedUsage#Using-DefaultInitializable":{"role":"pseudoSymbol","title":"Using DefaultInitializable","abstract":[{"type":"text","text":"This tutorial is a small collection of advanced tips and tricks."}],"identifier":"doc:\/\/Deeplink\/tutorials\/Deeplink\/AdvancedUsage#Using-DefaultInitializable","kind":"section","type":"section","url":"\/tutorials\/deeplink\/advancedusage#Using-DefaultInitializable"},"AdvancedUsage 4.swift":{"syntax":"swift","content":["","\/\/ Example link: `https:\/\/example.com\/product\/123`","","import Deeplink","","struct Product {","    var productId: String?","}","","let productDeeplink: Deeplink<Product> = try! \"\/product\/\\(\\.productId)\"","","func isMagicOn() -> Bool { true }","","let center = DeeplinksCenter()","","center","    .register(","        deeplink: productDeeplink,","        assigningTo: Product(),","        ifMatching: { url, value in","","        guard isMagicOn() else { return false }","        \/\/ Present the magic product view.","","        return true","    })","    .register(","        deeplink: productDeeplink,","        assigningTo: Product(),","        ifMatching: { url, value in","","        guard url.absoluteString?.starts(with: \"https\") ?? false","        else { return false }","","        \/\/ Present the normal product view.","","        return true","    })"],"fileName":"Altering matching.swift","identifier":"AdvancedUsage 4.swift","type":"file","fileType":"swift","highlights":[{"line":32},{"line":33},{"line":34}]}}}